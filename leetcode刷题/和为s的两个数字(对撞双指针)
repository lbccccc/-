输入一个递增排序的数组和一个数字s，在数组中查找两个数，使得它们的和正好是s。如果有多对数字的和等于s，则输出任意一对即可。

 

示例 1：

输入：nums = [2,7,11,15], target = 9
输出：[2,7] 或者 [7,2]
示例 2：

输入：nums = [10,26,30,31,47,60], target = 40
输出：[10,30] 或者 [30,10]
 

限制：

1 <= nums.length <= 10^5
1 <= nums[i] <= 10^6



一开始想的双指针是两个都从头开始，把这个和前几天那个移动窗口搞混了。失策失策。


class Solution {
    public int[] twoSum(int[] nums, int target) {
        int pre = 0;
        int cur = nums.length-1;
        int[] result = new int[2];
        while(cur>pre){
            if(nums[cur] + nums[pre]<target)pre++;
            else if(nums[cur] + nums[pre]>target)cur--;
            else break;
        }
        result[0] = nums[pre];
        result[1] = nums[cur];
        return result;
    }
}


2020 9.19 21.57
